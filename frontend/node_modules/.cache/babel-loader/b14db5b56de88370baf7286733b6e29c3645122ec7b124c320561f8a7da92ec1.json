{"ast":null,"code":"var _jsxFileName = \"/workspace/frontend/src/context/UserContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\n\n// Initial state\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  loading: true,\n  points: 0,\n  rank: null,\n  badges: [],\n  streak: 0,\n  orgs: [],\n  notifications: []\n};\n\n// Action types\nconst USER_ACTIONS = {\n  SET_USER: 'SET_USER',\n  SET_LOADING: 'SET_LOADING',\n  UPDATE_POINTS: 'UPDATE_POINTS',\n  ADD_BADGE: 'ADD_BADGE',\n  UPDATE_STREAK: 'UPDATE_STREAK',\n  ADD_NOTIFICATION: 'ADD_NOTIFICATION',\n  CLEAR_NOTIFICATION: 'CLEAR_NOTIFICATION',\n  LOGOUT: 'LOGOUT'\n};\n\n// Reducer\nfunction userReducer(state, action) {\n  switch (action.type) {\n    case USER_ACTIONS.SET_USER:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: !!action.payload,\n        loading: false\n      };\n    case USER_ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case USER_ACTIONS.UPDATE_POINTS:\n      return {\n        ...state,\n        points: action.payload,\n        user: state.user ? {\n          ...state.user,\n          points: action.payload\n        } : null\n      };\n    case USER_ACTIONS.ADD_BADGE:\n      return {\n        ...state,\n        badges: [...state.badges, action.payload],\n        user: state.user ? {\n          ...state.user,\n          badges: [...(state.user.badges || []), action.payload]\n        } : null\n      };\n    case USER_ACTIONS.UPDATE_STREAK:\n      return {\n        ...state,\n        streak: action.payload,\n        user: state.user ? {\n          ...state.user,\n          streak: action.payload\n        } : null\n      };\n    case USER_ACTIONS.ADD_NOTIFICATION:\n      return {\n        ...state,\n        notifications: [action.payload, ...state.notifications]\n      };\n    case USER_ACTIONS.CLEAR_NOTIFICATION:\n      return {\n        ...state,\n        notifications: state.notifications.filter(n => n.id !== action.payload)\n      };\n    case USER_ACTIONS.LOGOUT:\n      return {\n        ...initialState,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n\n// Provider component\nexport function UserProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(userReducer, initialState);\n\n  // Mock user data for development\n  useEffect(() => {\n    const mockUser = {\n      id: 1,\n      name: 'Alex Johnson',\n      email: 'alex.johnson@lmu.edu',\n      avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face',\n      points: 1250,\n      rank: 15,\n      streak: 7,\n      orgs: ['Greek Life', 'Student Government', 'Basketball Club'],\n      badges: [{\n        id: 1,\n        name: 'First Event',\n        icon: '🎉',\n        description: 'Attended your first event'\n      }, {\n        id: 2,\n        name: 'Week Warrior',\n        icon: '🔥',\n        description: '7-day streak'\n      }, {\n        id: 3,\n        name: 'Social Butterfly',\n        icon: '🦋',\n        description: 'Joined 3+ organizations'\n      }],\n      notifications: [{\n        id: 1,\n        type: 'event',\n        message: 'Basketball game starts in 30 minutes!',\n        read: false\n      }, {\n        id: 2,\n        type: 'points',\n        message: '+50 points for checking in!',\n        read: false\n      }]\n    };\n\n    // Simulate loading\n    setTimeout(() => {\n      dispatch({\n        type: USER_ACTIONS.SET_USER,\n        payload: mockUser\n      });\n    }, 1000);\n  }, []);\n\n  // Actions\n  const login = async (email, password) => {\n    try {\n      dispatch({\n        type: USER_ACTIONS.SET_LOADING,\n        payload: true\n      });\n\n      // Mock API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      const mockUser = {\n        id: 1,\n        name: 'Alex Johnson',\n        email: email,\n        avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face',\n        points: 1250,\n        rank: 15,\n        streak: 7,\n        orgs: ['Greek Life', 'Student Government', 'Basketball Club'],\n        badges: [{\n          id: 1,\n          name: 'First Event',\n          icon: '🎉',\n          description: 'Attended your first event'\n        }, {\n          id: 2,\n          name: 'Week Warrior',\n          icon: '🔥',\n          description: '7-day streak'\n        }, {\n          id: 3,\n          name: 'Social Butterfly',\n          icon: '🦋',\n          description: 'Joined 3+ organizations'\n        }]\n      };\n      dispatch({\n        type: USER_ACTIONS.SET_USER,\n        payload: mockUser\n      });\n      toast.success('Welcome back, Alex! 🦁');\n    } catch (error) {\n      toast.error('Login failed. Please try again.');\n      dispatch({\n        type: USER_ACTIONS.SET_LOADING,\n        payload: false\n      });\n    }\n  };\n  const logout = () => {\n    dispatch({\n      type: USER_ACTIONS.LOGOUT\n    });\n    toast.success('See you later! 👋');\n  };\n  const addPoints = (points, reason) => {\n    const newPoints = state.points + points;\n    dispatch({\n      type: USER_ACTIONS.UPDATE_POINTS,\n      payload: newPoints\n    });\n\n    // Add notification\n    dispatch({\n      type: USER_ACTIONS.ADD_NOTIFICATION,\n      payload: {\n        id: Date.now(),\n        type: 'points',\n        message: `+${points} points for ${reason}!`,\n        read: false,\n        timestamp: new Date()\n      }\n    });\n    toast.success(`+${points} points! ${reason} 🎉`);\n  };\n  const addBadge = badge => {\n    dispatch({\n      type: USER_ACTIONS.ADD_BADGE,\n      payload: badge\n    });\n    toast.success(`New badge unlocked: ${badge.name} ${badge.icon}`);\n  };\n  const updateStreak = streak => {\n    dispatch({\n      type: USER_ACTIONS.UPDATE_STREAK,\n      payload: streak\n    });\n  };\n  const addNotification = notification => {\n    dispatch({\n      type: USER_ACTIONS.ADD_NOTIFICATION,\n      payload: {\n        id: Date.now(),\n        timestamp: new Date(),\n        read: false,\n        ...notification\n      }\n    });\n  };\n  const clearNotification = id => {\n    dispatch({\n      type: USER_ACTIONS.CLEAR_NOTIFICATION,\n      payload: id\n    });\n  };\n  const value = {\n    ...state,\n    login,\n    logout,\n    addPoints,\n    addBadge,\n    updateStreak,\n    addNotification,\n    clearNotification\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n}\n\n// Hook to use the context\n_s(UserProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = UserProvider;\nexport function useUser() {\n  _s2();\n  const context = useContext(UserContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n}\n_s2(useUser, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","toast","jsxDEV","_jsxDEV","UserContext","initialState","user","isAuthenticated","loading","points","rank","badges","streak","orgs","notifications","USER_ACTIONS","SET_USER","SET_LOADING","UPDATE_POINTS","ADD_BADGE","UPDATE_STREAK","ADD_NOTIFICATION","CLEAR_NOTIFICATION","LOGOUT","userReducer","state","action","type","payload","filter","n","id","UserProvider","children","_s","dispatch","mockUser","name","email","avatar","icon","description","message","read","setTimeout","login","password","Promise","resolve","success","error","logout","addPoints","reason","newPoints","Date","now","timestamp","addBadge","badge","updateStreak","addNotification","notification","clearNotification","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUser","_s2","context","Error","$RefreshReg$"],"sources":["/workspace/frontend/src/context/UserContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport toast from 'react-hot-toast';\n\nconst UserContext = createContext();\n\n// Initial state\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  loading: true,\n  points: 0,\n  rank: null,\n  badges: [],\n  streak: 0,\n  orgs: [],\n  notifications: []\n};\n\n// Action types\nconst USER_ACTIONS = {\n  SET_USER: 'SET_USER',\n  SET_LOADING: 'SET_LOADING',\n  UPDATE_POINTS: 'UPDATE_POINTS',\n  ADD_BADGE: 'ADD_BADGE',\n  UPDATE_STREAK: 'UPDATE_STREAK',\n  ADD_NOTIFICATION: 'ADD_NOTIFICATION',\n  CLEAR_NOTIFICATION: 'CLEAR_NOTIFICATION',\n  LOGOUT: 'LOGOUT'\n};\n\n// Reducer\nfunction userReducer(state, action) {\n  switch (action.type) {\n    case USER_ACTIONS.SET_USER:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: !!action.payload,\n        loading: false\n      };\n    \n    case USER_ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    \n    case USER_ACTIONS.UPDATE_POINTS:\n      return {\n        ...state,\n        points: action.payload,\n        user: state.user ? { ...state.user, points: action.payload } : null\n      };\n    \n    case USER_ACTIONS.ADD_BADGE:\n      return {\n        ...state,\n        badges: [...state.badges, action.payload],\n        user: state.user ? { \n          ...state.user, \n          badges: [...(state.user.badges || []), action.payload] \n        } : null\n      };\n    \n    case USER_ACTIONS.UPDATE_STREAK:\n      return {\n        ...state,\n        streak: action.payload,\n        user: state.user ? { ...state.user, streak: action.payload } : null\n      };\n    \n    case USER_ACTIONS.ADD_NOTIFICATION:\n      return {\n        ...state,\n        notifications: [action.payload, ...state.notifications]\n      };\n    \n    case USER_ACTIONS.CLEAR_NOTIFICATION:\n      return {\n        ...state,\n        notifications: state.notifications.filter(n => n.id !== action.payload)\n      };\n    \n    case USER_ACTIONS.LOGOUT:\n      return {\n        ...initialState,\n        loading: false\n      };\n    \n    default:\n      return state;\n  }\n}\n\n// Provider component\nexport function UserProvider({ children }) {\n  const [state, dispatch] = useReducer(userReducer, initialState);\n\n  // Mock user data for development\n  useEffect(() => {\n    const mockUser = {\n      id: 1,\n      name: 'Alex Johnson',\n      email: 'alex.johnson@lmu.edu',\n      avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face',\n      points: 1250,\n      rank: 15,\n      streak: 7,\n      orgs: ['Greek Life', 'Student Government', 'Basketball Club'],\n      badges: [\n        { id: 1, name: 'First Event', icon: '🎉', description: 'Attended your first event' },\n        { id: 2, name: 'Week Warrior', icon: '🔥', description: '7-day streak' },\n        { id: 3, name: 'Social Butterfly', icon: '🦋', description: 'Joined 3+ organizations' }\n      ],\n      notifications: [\n        { id: 1, type: 'event', message: 'Basketball game starts in 30 minutes!', read: false },\n        { id: 2, type: 'points', message: '+50 points for checking in!', read: false }\n      ]\n    };\n\n    // Simulate loading\n    setTimeout(() => {\n      dispatch({ type: USER_ACTIONS.SET_USER, payload: mockUser });\n    }, 1000);\n  }, []);\n\n  // Actions\n  const login = async (email, password) => {\n    try {\n      dispatch({ type: USER_ACTIONS.SET_LOADING, payload: true });\n      \n      // Mock API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      const mockUser = {\n        id: 1,\n        name: 'Alex Johnson',\n        email: email,\n        avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face',\n        points: 1250,\n        rank: 15,\n        streak: 7,\n        orgs: ['Greek Life', 'Student Government', 'Basketball Club'],\n        badges: [\n          { id: 1, name: 'First Event', icon: '🎉', description: 'Attended your first event' },\n          { id: 2, name: 'Week Warrior', icon: '🔥', description: '7-day streak' },\n          { id: 3, name: 'Social Butterfly', icon: '🦋', description: 'Joined 3+ organizations' }\n        ]\n      };\n      \n      dispatch({ type: USER_ACTIONS.SET_USER, payload: mockUser });\n      toast.success('Welcome back, Alex! 🦁');\n      \n    } catch (error) {\n      toast.error('Login failed. Please try again.');\n      dispatch({ type: USER_ACTIONS.SET_LOADING, payload: false });\n    }\n  };\n\n  const logout = () => {\n    dispatch({ type: USER_ACTIONS.LOGOUT });\n    toast.success('See you later! 👋');\n  };\n\n  const addPoints = (points, reason) => {\n    const newPoints = state.points + points;\n    dispatch({ type: USER_ACTIONS.UPDATE_POINTS, payload: newPoints });\n    \n    // Add notification\n    dispatch({\n      type: USER_ACTIONS.ADD_NOTIFICATION,\n      payload: {\n        id: Date.now(),\n        type: 'points',\n        message: `+${points} points for ${reason}!`,\n        read: false,\n        timestamp: new Date()\n      }\n    });\n    \n    toast.success(`+${points} points! ${reason} 🎉`);\n  };\n\n  const addBadge = (badge) => {\n    dispatch({ type: USER_ACTIONS.ADD_BADGE, payload: badge });\n    toast.success(`New badge unlocked: ${badge.name} ${badge.icon}`);\n  };\n\n  const updateStreak = (streak) => {\n    dispatch({ type: USER_ACTIONS.UPDATE_STREAK, payload: streak });\n  };\n\n  const addNotification = (notification) => {\n    dispatch({\n      type: USER_ACTIONS.ADD_NOTIFICATION,\n      payload: {\n        id: Date.now(),\n        timestamp: new Date(),\n        read: false,\n        ...notification\n      }\n    });\n  };\n\n  const clearNotification = (id) => {\n    dispatch({ type: USER_ACTIONS.CLEAR_NOTIFICATION, payload: id });\n  };\n\n  const value = {\n    ...state,\n    login,\n    logout,\n    addPoints,\n    addBadge,\n    updateStreak,\n    addNotification,\n    clearNotification\n  };\n\n  return (\n    <UserContext.Provider value={value}>\n      {children}\n    </UserContext.Provider>\n  );\n}\n\n// Hook to use the context\nexport function useUser() {\n  const context = useContext(UserContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}