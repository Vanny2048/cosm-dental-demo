{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import{motion,AnimatePresence}from'framer-motion';import{useUser}from'../context/UserContext';import'./BuddyChat.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const BuddyChat=()=>{const[isOpen,setIsOpen]=useState(false);const[messages,setMessages]=useState([]);const[inputValue,setInputValue]=useState('');const[isLoading,setIsLoading]=useState(false);const[modelStatus,setModelStatus]=useState(null);const messagesEndRef=useRef(null);const{user}=useUser();// GenZ prompt suggestions\nconst promptSuggestions=[\"what's the best late night food on campus?\",\"how do i join greek life?\",\"what's happening this weekend?\",\"where's the best study spot?\"];const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});};useEffect(()=>{scrollToBottom();},[messages]);// Check Llama model status on component mount\nuseEffect(()=>{checkModelStatus();},[]);// Initialize with welcome message\nuseEffect(()=>{if(isOpen&&messages.length===0){setMessages([{id:1,type:'bot',content:`hey ${(user===null||user===void 0?void 0:user.name)||'lion'}! 🦁 i'm your LMU buddy - your go-to for all things campus life! ask me anything about events, food, study spots, greek life, or just general LMU vibes. i'm here to help you live your best college life fr ✨`,timestamp:new Date(),model:modelStatus!==null&&modelStatus!==void 0&&modelStatus.available?'llama-genz-buddy':'fallback'}]);}},[isOpen,user===null||user===void 0?void 0:user.name,modelStatus]);const checkModelStatus=async()=>{try{const response=await fetch('/api/llama/status');const data=await response.json();setModelStatus(data);if(data.available){console.log('✅ Llama model is available and connected');}else{console.log('⚠️ Using fallback responses - Llama model not available');}}catch(error){console.error('Error checking model status:',error);setModelStatus({available:false,status:'error'});}};const sendMessage=async content=>{if(!content.trim())return;const userMessage={id:Date.now(),type:'user',content:content.trim(),timestamp:new Date()};setMessages(prev=>[...prev,userMessage]);setInputValue('');setIsLoading(true);try{// Prepare conversation history for context\nconst conversationHistory=messages.map(msg=>({type:msg.type,content:msg.content}));// Make API call to Llama model\nconst response=await fetch('/api/genz-buddy',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({message:content.trim(),conversation_history:conversationHistory})});if(!response.ok){throw new Error(`API error: ${response.status}`);}const data=await response.json();if(data.success){const botMessage={id:Date.now()+1,type:'bot',content:data.response,timestamp:new Date(),model:data.model||'unknown'};setMessages(prev=>[...prev,botMessage]);// Show model indicator if using fallback\nif(data.model==='fallback'){console.log('Using fallback response - Llama model unavailable');}}else{throw new Error(data.error||'Failed to get response');}}catch(error){console.error('Error sending message:',error);const errorMessage={id:Date.now()+1,type:'bot',content:\"Oops! Something went wrong. 😅 Try asking me something else!\",timestamp:new Date(),model:'error'};setMessages(prev=>[...prev,errorMessage]);}finally{setIsLoading(false);}};const handleSubmit=e=>{e.preventDefault();sendMessage(inputValue);};const handleSuggestionClick=suggestion=>{sendMessage(suggestion);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(motion.button,{className:\"buddy-chat-button\",onClick:()=>setIsOpen(true),whileHover:{scale:1.1},whileTap:{scale:0.9},initial:{scale:0},animate:{scale:1},transition:{delay:1,type:\"spring\",stiffness:260,damping:20},children:[/*#__PURE__*/_jsx(\"span\",{className:\"buddy-icon\",children:\"\\uD83E\\uDD81\"}),/*#__PURE__*/_jsx(\"span\",{className:\"buddy-text\",children:\"ask buddy\"}),(modelStatus===null||modelStatus===void 0?void 0:modelStatus.available)&&/*#__PURE__*/_jsx(\"span\",{className:\"model-indicator\",title:\"Llama model connected\",children:\"\\u2728\"})]}),/*#__PURE__*/_jsx(AnimatePresence,{children:isOpen&&/*#__PURE__*/_jsx(motion.div,{className:\"buddy-chat-overlay\",initial:{opacity:0},animate:{opacity:1},exit:{opacity:0},onClick:()=>setIsOpen(false),children:/*#__PURE__*/_jsxs(motion.div,{className:\"buddy-chat-modal\",initial:{scale:0.8,opacity:0,y:50},animate:{scale:1,opacity:1,y:0},exit:{scale:0.8,opacity:0,y:50},onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-avatar\",children:/*#__PURE__*/_jsx(\"span\",{className:\"avatar-icon\",children:\"\\uD83E\\uDD81\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-info\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"chat-title\",children:\"LMU buddy\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"chat-subtitle\",children:[\"your campus bestie \\u2728\",modelStatus!==null&&modelStatus!==void 0&&modelStatus.available?/*#__PURE__*/_jsx(\"span\",{className:\"model-status connected\",children:\" \\u2022 llama powered\"}):/*#__PURE__*/_jsx(\"span\",{className:\"model-status fallback\",children:\" \\u2022 fallback mode\"})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"chat-close\",onClick:()=>setIsOpen(false),children:\"\\u2715\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-messages\",children:[messages.map(message=>/*#__PURE__*/_jsxs(motion.div,{className:`message ${message.type}`,initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:0.3},children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-content\",children:message.content}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-meta\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-time\",children:message.timestamp.toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'})}),message.model&&message.model!=='llama-genz-buddy'&&/*#__PURE__*/_jsx(\"div\",{className:\"message-model\",children:message.model==='fallback'?'🤖':'⚠️'})]})]},message.id)),isLoading&&/*#__PURE__*/_jsx(motion.div,{className:\"message bot loading\",initial:{opacity:0},animate:{opacity:1},children:/*#__PURE__*/_jsx(\"div\",{className:\"message-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"typing-indicator\",children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{})]})})}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),messages.length===1&&/*#__PURE__*/_jsxs(\"div\",{className:\"prompt-suggestions\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"suggestions-title\",children:\"try asking me:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"suggestions-grid\",children:promptSuggestions.map((suggestion,index)=>/*#__PURE__*/_jsx(\"button\",{className:\"suggestion-button\",onClick:()=>handleSuggestionClick(suggestion),children:suggestion},index))})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"chat-input-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"chat-input\",placeholder:\"ask me anything about LMU life...\",value:inputValue,onChange:e=>setInputValue(e.target.value),disabled:isLoading}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"chat-send\",disabled:!inputValue.trim()||isLoading,children:/*#__PURE__*/_jsx(\"span\",{className:\"send-icon\",children:\"\\uD83D\\uDCAC\"})})]})]})})})]});};export default BuddyChat;","map":{"version":3,"names":["React","useState","useRef","useEffect","motion","AnimatePresence","useUser","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","BuddyChat","isOpen","setIsOpen","messages","setMessages","inputValue","setInputValue","isLoading","setIsLoading","modelStatus","setModelStatus","messagesEndRef","user","promptSuggestions","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","checkModelStatus","length","id","type","content","name","timestamp","Date","model","available","response","fetch","data","json","console","log","error","status","sendMessage","trim","userMessage","now","prev","conversationHistory","map","msg","method","headers","body","JSON","stringify","message","conversation_history","ok","Error","success","botMessage","errorMessage","handleSubmit","e","preventDefault","handleSuggestionClick","suggestion","children","button","className","onClick","whileHover","scale","whileTap","initial","animate","transition","delay","stiffness","damping","title","div","opacity","exit","y","stopPropagation","duration","toLocaleTimeString","hour","minute","ref","index","onSubmit","placeholder","value","onChange","target","disabled"],"sources":["/workspace/frontend/src/components/BuddyChat.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useUser } from '../context/UserContext';\nimport './BuddyChat.css';\n\nconst BuddyChat = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [modelStatus, setModelStatus] = useState(null);\n  const messagesEndRef = useRef(null);\n  const { user } = useUser();\n\n  // GenZ prompt suggestions\n  const promptSuggestions = [\n    \"what's the best late night food on campus?\",\n    \"how do i join greek life?\",\n    \"what's happening this weekend?\",\n    \"where's the best study spot?\"\n  ];\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Check Llama model status on component mount\n  useEffect(() => {\n    checkModelStatus();\n  }, []);\n\n  // Initialize with welcome message\n  useEffect(() => {\n    if (isOpen && messages.length === 0) {\n      setMessages([\n        {\n          id: 1,\n          type: 'bot',\n          content: `hey ${user?.name || 'lion'}! 🦁 i'm your LMU buddy - your go-to for all things campus life! ask me anything about events, food, study spots, greek life, or just general LMU vibes. i'm here to help you live your best college life fr ✨`,\n          timestamp: new Date(),\n          model: modelStatus?.available ? 'llama-genz-buddy' : 'fallback'\n        }\n      ]);\n    }\n  }, [isOpen, user?.name, modelStatus]);\n\n  const checkModelStatus = async () => {\n    try {\n      const response = await fetch('/api/llama/status');\n      const data = await response.json();\n      setModelStatus(data);\n      \n      if (data.available) {\n        console.log('✅ Llama model is available and connected');\n      } else {\n        console.log('⚠️ Using fallback responses - Llama model not available');\n      }\n    } catch (error) {\n      console.error('Error checking model status:', error);\n      setModelStatus({ available: false, status: 'error' });\n    }\n  };\n\n  const sendMessage = async (content) => {\n    if (!content.trim()) return;\n\n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      content: content.trim(),\n      timestamp: new Date()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue('');\n    setIsLoading(true);\n\n    try {\n      // Prepare conversation history for context\n      const conversationHistory = messages.map(msg => ({\n        type: msg.type,\n        content: msg.content\n      }));\n\n      // Make API call to Llama model\n      const response = await fetch('/api/genz-buddy', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          message: content.trim(),\n          conversation_history: conversationHistory\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`API error: ${response.status}`);\n      }\n\n      const data = await response.json();\n\n      if (data.success) {\n        const botMessage = {\n          id: Date.now() + 1,\n          type: 'bot',\n          content: data.response,\n          timestamp: new Date(),\n          model: data.model || 'unknown'\n        };\n\n        setMessages(prev => [...prev, botMessage]);\n        \n        // Show model indicator if using fallback\n        if (data.model === 'fallback') {\n          console.log('Using fallback response - Llama model unavailable');\n        }\n      } else {\n        throw new Error(data.error || 'Failed to get response');\n      }\n\n    } catch (error) {\n      console.error('Error sending message:', error);\n      \n      const errorMessage = {\n        id: Date.now() + 1,\n        type: 'bot',\n        content: \"Oops! Something went wrong. 😅 Try asking me something else!\",\n        timestamp: new Date(),\n        model: 'error'\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    sendMessage(inputValue);\n  };\n\n  const handleSuggestionClick = (suggestion) => {\n    sendMessage(suggestion);\n  };\n\n  return (\n    <>\n      {/* Floating Chat Button */}\n      <motion.button\n        className=\"buddy-chat-button\"\n        onClick={() => setIsOpen(true)}\n        whileHover={{ scale: 1.1 }}\n        whileTap={{ scale: 0.9 }}\n        initial={{ scale: 0 }}\n        animate={{ scale: 1 }}\n        transition={{ delay: 1, type: \"spring\", stiffness: 260, damping: 20 }}\n      >\n        <span className=\"buddy-icon\">🦁</span>\n        <span className=\"buddy-text\">ask buddy</span>\n        {modelStatus?.available && (\n          <span className=\"model-indicator\" title=\"Llama model connected\">✨</span>\n        )}\n      </motion.button>\n\n      {/* Chat Modal */}\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            className=\"buddy-chat-overlay\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            onClick={() => setIsOpen(false)}\n          >\n            <motion.div\n              className=\"buddy-chat-modal\"\n              initial={{ scale: 0.8, opacity: 0, y: 50 }}\n              animate={{ scale: 1, opacity: 1, y: 0 }}\n              exit={{ scale: 0.8, opacity: 0, y: 50 }}\n              onClick={(e) => e.stopPropagation()}\n            >\n              {/* Chat Header */}\n              <div className=\"chat-header\">\n                <div className=\"chat-avatar\">\n                  <span className=\"avatar-icon\">🦁</span>\n                </div>\n                <div className=\"chat-info\">\n                  <h3 className=\"chat-title\">LMU buddy</h3>\n                  <p className=\"chat-subtitle\">\n                    your campus bestie ✨\n                    {modelStatus?.available ? (\n                      <span className=\"model-status connected\"> • llama powered</span>\n                    ) : (\n                      <span className=\"model-status fallback\"> • fallback mode</span>\n                    )}\n                  </p>\n                </div>\n                <button \n                  className=\"chat-close\"\n                  onClick={() => setIsOpen(false)}\n                >\n                  ✕\n                </button>\n              </div>\n\n              {/* Chat Messages */}\n              <div className=\"chat-messages\">\n                {messages.map((message) => (\n                  <motion.div\n                    key={message.id}\n                    className={`message ${message.type}`}\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.3 }}\n                  >\n                    <div className=\"message-content\">\n                      {message.content}\n                    </div>\n                    <div className=\"message-meta\">\n                      <div className=\"message-time\">\n                        {message.timestamp.toLocaleTimeString([], { \n                          hour: '2-digit', \n                          minute: '2-digit' \n                        })}\n                      </div>\n                      {message.model && message.model !== 'llama-genz-buddy' && (\n                        <div className=\"message-model\">\n                          {message.model === 'fallback' ? '🤖' : '⚠️'}\n                        </div>\n                      )}\n                    </div>\n                  </motion.div>\n                ))}\n                \n                {isLoading && (\n                  <motion.div\n                    className=\"message bot loading\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                  >\n                    <div className=\"message-content\">\n                      <div className=\"typing-indicator\">\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                      </div>\n                    </div>\n                  </motion.div>\n                )}\n                \n                <div ref={messagesEndRef} />\n              </div>\n\n              {/* Prompt Suggestions */}\n              {messages.length === 1 && (\n                <div className=\"prompt-suggestions\">\n                  <p className=\"suggestions-title\">try asking me:</p>\n                  <div className=\"suggestions-grid\">\n                    {promptSuggestions.map((suggestion, index) => (\n                      <button\n                        key={index}\n                        className=\"suggestion-button\"\n                        onClick={() => handleSuggestionClick(suggestion)}\n                      >\n                        {suggestion}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Chat Input */}\n              <form className=\"chat-input-form\" onSubmit={handleSubmit}>\n                <input\n                  type=\"text\"\n                  className=\"chat-input\"\n                  placeholder=\"ask me anything about LMU life...\"\n                  value={inputValue}\n                  onChange={(e) => setInputValue(e.target.value)}\n                  disabled={isLoading}\n                />\n                <button \n                  type=\"submit\" \n                  className=\"chat-send\"\n                  disabled={!inputValue.trim() || isLoading}\n                >\n                  <span className=\"send-icon\">💬</span>\n                </button>\n              </form>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </>\n  );\n};\n\nexport default BuddyChat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}