{"ast":null,"code":"var _jsxFileName = \"/workspace/frontend/src/components/BuddyChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useUser } from '../context/UserContext';\nimport './BuddyChat.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BuddyChat = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [modelStatus, setModelStatus] = useState(null);\n  const messagesEndRef = useRef(null);\n  const {\n    user\n  } = useUser();\n\n  // GenZ prompt suggestions\n  const promptSuggestions = [\"what's the best late night food on campus?\", \"how do i join greek life?\", \"what's happening this weekend?\", \"where's the best study spot?\"];\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Check Llama model status on component mount\n  useEffect(() => {\n    checkModelStatus();\n  }, []);\n\n  // Initialize with welcome message\n  useEffect(() => {\n    if (isOpen && messages.length === 0) {\n      setMessages([{\n        id: 1,\n        type: 'bot',\n        content: `hey ${(user === null || user === void 0 ? void 0 : user.name) || 'lion'}! 🦁 i'm your LMU buddy - your go-to for all things campus life! ask me anything about events, food, study spots, greek life, or just general LMU vibes. i'm here to help you live your best college life fr ✨`,\n        timestamp: new Date(),\n        model: modelStatus !== null && modelStatus !== void 0 && modelStatus.available ? 'llama-genz-buddy' : 'fallback'\n      }]);\n    }\n  }, [isOpen, user === null || user === void 0 ? void 0 : user.name, modelStatus]);\n  const checkModelStatus = async () => {\n    try {\n      const response = await fetch('/api/llama/status');\n      const data = await response.json();\n      setModelStatus(data);\n      if (data.available) {\n        console.log('✅ Llama model is available and connected');\n      } else {\n        console.log('⚠️ Using fallback responses - Llama model not available');\n      }\n    } catch (error) {\n      console.error('Error checking model status:', error);\n      setModelStatus({\n        available: false,\n        status: 'error'\n      });\n    }\n  };\n  const sendMessage = async content => {\n    if (!content.trim()) return;\n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      content: content.trim(),\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue('');\n    setIsLoading(true);\n    try {\n      // Prepare conversation history for context\n      const conversationHistory = messages.map(msg => ({\n        type: msg.type,\n        content: msg.content\n      }));\n\n      // Make API call to Llama model\n      const response = await fetch('/api/genz-buddy', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: content.trim(),\n          conversation_history: conversationHistory\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`API error: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.success) {\n        const botMessage = {\n          id: Date.now() + 1,\n          type: 'bot',\n          content: data.response,\n          timestamp: new Date(),\n          model: data.model || 'unknown'\n        };\n        setMessages(prev => [...prev, botMessage]);\n\n        // Show model indicator if using fallback\n        if (data.model === 'fallback') {\n          console.log('Using fallback response - Llama model unavailable');\n        }\n      } else {\n        throw new Error(data.error || 'Failed to get response');\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      const errorMessage = {\n        id: Date.now() + 1,\n        type: 'bot',\n        content: \"Oops! Something went wrong. 😅 Try asking me something else!\",\n        timestamp: new Date(),\n        model: 'error'\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    sendMessage(inputValue);\n  };\n  const handleSuggestionClick = suggestion => {\n    sendMessage(suggestion);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(motion.button, {\n      className: \"buddy-chat-button\",\n      onClick: () => setIsOpen(true),\n      whileHover: {\n        scale: 1.1\n      },\n      whileTap: {\n        scale: 0.9\n      },\n      initial: {\n        scale: 0\n      },\n      animate: {\n        scale: 1\n      },\n      transition: {\n        delay: 1,\n        type: \"spring\",\n        stiffness: 260,\n        damping: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"buddy-icon\",\n        children: \"\\uD83E\\uDD81\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"buddy-text\",\n        children: \"ask buddy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), (modelStatus === null || modelStatus === void 0 ? void 0 : modelStatus.available) && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"model-indicator\",\n        title: \"Llama model connected\",\n        children: \"\\u2728\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: isOpen && /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"buddy-chat-overlay\",\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        exit: {\n          opacity: 0\n        },\n        onClick: () => setIsOpen(false),\n        children: /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"buddy-chat-modal\",\n          initial: {\n            scale: 0.8,\n            opacity: 0,\n            y: 50\n          },\n          animate: {\n            scale: 1,\n            opacity: 1,\n            y: 0\n          },\n          exit: {\n            scale: 0.8,\n            opacity: 0,\n            y: 50\n          },\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-avatar\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"avatar-icon\",\n                children: \"\\uD83E\\uDD81\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"chat-title\",\n                children: \"LMU buddy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"chat-subtitle\",\n                children: [\"your campus bestie \\u2728\", modelStatus !== null && modelStatus !== void 0 && modelStatus.available ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"model-status connected\",\n                  children: \" \\u2022 llama powered\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"model-status fallback\",\n                  children: \" \\u2022 fallback mode\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"chat-close\",\n              onClick: () => setIsOpen(false),\n              children: \"\\u2715\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-messages\",\n            children: [messages.map(message => /*#__PURE__*/_jsxDEV(motion.div, {\n              className: `message ${message.type}`,\n              initial: {\n                opacity: 0,\n                y: 20\n              },\n              animate: {\n                opacity: 1,\n                y: 0\n              },\n              transition: {\n                duration: 0.3\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content\",\n                children: message.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-time\",\n                  children: message.timestamp.toLocaleTimeString([], {\n                    hour: '2-digit',\n                    minute: '2-digit'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 23\n                }, this), message.model && message.model !== 'llama-genz-buddy' && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-model\",\n                  children: message.model === 'fallback' ? '🤖' : '⚠️'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this)]\n            }, message.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 19\n            }, this)), isLoading && /*#__PURE__*/_jsxDEV(motion.div, {\n              className: \"message bot loading\",\n              initial: {\n                opacity: 0\n              },\n              animate: {\n                opacity: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"typing-indicator\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), messages.length === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prompt-suggestions\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"suggestions-title\",\n              children: \"try asking me:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"suggestions-grid\",\n              children: promptSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"suggestion-button\",\n                onClick: () => handleSuggestionClick(suggestion),\n                children: suggestion\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"chat-input-form\",\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"chat-input\",\n              placeholder: \"ask me anything about LMU life...\",\n              value: inputValue,\n              onChange: e => setInputValue(e.target.value),\n              disabled: isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"chat-send\",\n              disabled: !inputValue.trim() || isLoading,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"send-icon\",\n                children: \"\\uD83D\\uDCAC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(BuddyChat, \"h0bDRC7SehnjenwDySqm6oKpVeY=\", false, function () {\n  return [useUser];\n});\n_c = BuddyChat;\nexport default BuddyChat;\nvar _c;\n$RefreshReg$(_c, \"BuddyChat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","motion","AnimatePresence","useUser","jsxDEV","_jsxDEV","Fragment","_Fragment","BuddyChat","_s","isOpen","setIsOpen","messages","setMessages","inputValue","setInputValue","isLoading","setIsLoading","modelStatus","setModelStatus","messagesEndRef","user","promptSuggestions","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","checkModelStatus","length","id","type","content","name","timestamp","Date","model","available","response","fetch","data","json","console","log","error","status","sendMessage","trim","userMessage","now","prev","conversationHistory","map","msg","method","headers","body","JSON","stringify","message","conversation_history","ok","Error","success","botMessage","errorMessage","handleSubmit","e","preventDefault","handleSuggestionClick","suggestion","children","button","className","onClick","whileHover","scale","whileTap","initial","animate","transition","delay","stiffness","damping","fileName","_jsxFileName","lineNumber","columnNumber","title","div","opacity","exit","y","stopPropagation","duration","toLocaleTimeString","hour","minute","ref","index","onSubmit","placeholder","value","onChange","target","disabled","_c","$RefreshReg$"],"sources":["/workspace/frontend/src/components/BuddyChat.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useUser } from '../context/UserContext';\nimport './BuddyChat.css';\n\nconst BuddyChat = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [modelStatus, setModelStatus] = useState(null);\n  const messagesEndRef = useRef(null);\n  const { user } = useUser();\n\n  // GenZ prompt suggestions\n  const promptSuggestions = [\n    \"what's the best late night food on campus?\",\n    \"how do i join greek life?\",\n    \"what's happening this weekend?\",\n    \"where's the best study spot?\"\n  ];\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Check Llama model status on component mount\n  useEffect(() => {\n    checkModelStatus();\n  }, []);\n\n  // Initialize with welcome message\n  useEffect(() => {\n    if (isOpen && messages.length === 0) {\n      setMessages([\n        {\n          id: 1,\n          type: 'bot',\n          content: `hey ${user?.name || 'lion'}! 🦁 i'm your LMU buddy - your go-to for all things campus life! ask me anything about events, food, study spots, greek life, or just general LMU vibes. i'm here to help you live your best college life fr ✨`,\n          timestamp: new Date(),\n          model: modelStatus?.available ? 'llama-genz-buddy' : 'fallback'\n        }\n      ]);\n    }\n  }, [isOpen, user?.name, modelStatus]);\n\n  const checkModelStatus = async () => {\n    try {\n      const response = await fetch('/api/llama/status');\n      const data = await response.json();\n      setModelStatus(data);\n      \n      if (data.available) {\n        console.log('✅ Llama model is available and connected');\n      } else {\n        console.log('⚠️ Using fallback responses - Llama model not available');\n      }\n    } catch (error) {\n      console.error('Error checking model status:', error);\n      setModelStatus({ available: false, status: 'error' });\n    }\n  };\n\n  const sendMessage = async (content) => {\n    if (!content.trim()) return;\n\n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      content: content.trim(),\n      timestamp: new Date()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue('');\n    setIsLoading(true);\n\n    try {\n      // Prepare conversation history for context\n      const conversationHistory = messages.map(msg => ({\n        type: msg.type,\n        content: msg.content\n      }));\n\n      // Make API call to Llama model\n      const response = await fetch('/api/genz-buddy', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          message: content.trim(),\n          conversation_history: conversationHistory\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`API error: ${response.status}`);\n      }\n\n      const data = await response.json();\n\n      if (data.success) {\n        const botMessage = {\n          id: Date.now() + 1,\n          type: 'bot',\n          content: data.response,\n          timestamp: new Date(),\n          model: data.model || 'unknown'\n        };\n\n        setMessages(prev => [...prev, botMessage]);\n        \n        // Show model indicator if using fallback\n        if (data.model === 'fallback') {\n          console.log('Using fallback response - Llama model unavailable');\n        }\n      } else {\n        throw new Error(data.error || 'Failed to get response');\n      }\n\n    } catch (error) {\n      console.error('Error sending message:', error);\n      \n      const errorMessage = {\n        id: Date.now() + 1,\n        type: 'bot',\n        content: \"Oops! Something went wrong. 😅 Try asking me something else!\",\n        timestamp: new Date(),\n        model: 'error'\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    sendMessage(inputValue);\n  };\n\n  const handleSuggestionClick = (suggestion) => {\n    sendMessage(suggestion);\n  };\n\n  return (\n    <>\n      {/* Floating Chat Button */}\n      <motion.button\n        className=\"buddy-chat-button\"\n        onClick={() => setIsOpen(true)}\n        whileHover={{ scale: 1.1 }}\n        whileTap={{ scale: 0.9 }}\n        initial={{ scale: 0 }}\n        animate={{ scale: 1 }}\n        transition={{ delay: 1, type: \"spring\", stiffness: 260, damping: 20 }}\n      >\n        <span className=\"buddy-icon\">🦁</span>\n        <span className=\"buddy-text\">ask buddy</span>\n        {modelStatus?.available && (\n          <span className=\"model-indicator\" title=\"Llama model connected\">✨</span>\n        )}\n      </motion.button>\n\n      {/* Chat Modal */}\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            className=\"buddy-chat-overlay\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            onClick={() => setIsOpen(false)}\n          >\n            <motion.div\n              className=\"buddy-chat-modal\"\n              initial={{ scale: 0.8, opacity: 0, y: 50 }}\n              animate={{ scale: 1, opacity: 1, y: 0 }}\n              exit={{ scale: 0.8, opacity: 0, y: 50 }}\n              onClick={(e) => e.stopPropagation()}\n            >\n              {/* Chat Header */}\n              <div className=\"chat-header\">\n                <div className=\"chat-avatar\">\n                  <span className=\"avatar-icon\">🦁</span>\n                </div>\n                <div className=\"chat-info\">\n                  <h3 className=\"chat-title\">LMU buddy</h3>\n                  <p className=\"chat-subtitle\">\n                    your campus bestie ✨\n                    {modelStatus?.available ? (\n                      <span className=\"model-status connected\"> • llama powered</span>\n                    ) : (\n                      <span className=\"model-status fallback\"> • fallback mode</span>\n                    )}\n                  </p>\n                </div>\n                <button \n                  className=\"chat-close\"\n                  onClick={() => setIsOpen(false)}\n                >\n                  ✕\n                </button>\n              </div>\n\n              {/* Chat Messages */}\n              <div className=\"chat-messages\">\n                {messages.map((message) => (\n                  <motion.div\n                    key={message.id}\n                    className={`message ${message.type}`}\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.3 }}\n                  >\n                    <div className=\"message-content\">\n                      {message.content}\n                    </div>\n                    <div className=\"message-meta\">\n                      <div className=\"message-time\">\n                        {message.timestamp.toLocaleTimeString([], { \n                          hour: '2-digit', \n                          minute: '2-digit' \n                        })}\n                      </div>\n                      {message.model && message.model !== 'llama-genz-buddy' && (\n                        <div className=\"message-model\">\n                          {message.model === 'fallback' ? '🤖' : '⚠️'}\n                        </div>\n                      )}\n                    </div>\n                  </motion.div>\n                ))}\n                \n                {isLoading && (\n                  <motion.div\n                    className=\"message bot loading\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                  >\n                    <div className=\"message-content\">\n                      <div className=\"typing-indicator\">\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                      </div>\n                    </div>\n                  </motion.div>\n                )}\n                \n                <div ref={messagesEndRef} />\n              </div>\n\n              {/* Prompt Suggestions */}\n              {messages.length === 1 && (\n                <div className=\"prompt-suggestions\">\n                  <p className=\"suggestions-title\">try asking me:</p>\n                  <div className=\"suggestions-grid\">\n                    {promptSuggestions.map((suggestion, index) => (\n                      <button\n                        key={index}\n                        className=\"suggestion-button\"\n                        onClick={() => handleSuggestionClick(suggestion)}\n                      >\n                        {suggestion}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Chat Input */}\n              <form className=\"chat-input-form\" onSubmit={handleSubmit}>\n                <input\n                  type=\"text\"\n                  className=\"chat-input\"\n                  placeholder=\"ask me anything about LMU life...\"\n                  value={inputValue}\n                  onChange={(e) => setInputValue(e.target.value)}\n                  disabled={isLoading}\n                />\n                <button \n                  type=\"submit\" \n                  className=\"chat-send\"\n                  disabled={!inputValue.trim() || isLoading}\n                >\n                  <span className=\"send-icon\">💬</span>\n                </button>\n              </form>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </>\n  );\n};\n\nexport default BuddyChat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}